@model Bill
@{
    ViewData["Title"] = "Bill Details";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0"><i class="bi bi-receipt-cutoff me-2 text-primary"></i>Bill Details</h2>
        <div>
            <a asp-action="Index" class="btn btn-outline-secondary me-2">
                <i class="bi bi-arrow-left me-1"></i>Back to List
            </a>
            <button onclick="window.print()" class="btn btn-primary me-2">
                <i class="bi bi-printer me-1"></i>Print Bill
            </button>
            <button id="shareWhatsApp" class="btn btn-success">
                <i class="bi bi-whatsapp me-1"></i>Share via WhatsApp
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <!-- Bill Information Card -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white py-3 border-bottom">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 fw-bold"><i class="bi bi-info-circle me-2 text-primary"></i>Bill Information</h5>
                        <span class="badge bg-primary rounded-pill px-3 py-2">
                            #@Model.BillNumber
                        </span>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <h6 class="text-muted mb-2">Customer Details</h6>
                            <p class="mb-1 fw-bold fs-5">@Model.CustomerName</p>
                            <p class="mb-0">@Model.CustomerContact</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <h6 class="text-muted mb-2">Bill Details</h6>
                            <p class="mb-1"><strong>Bill Date:</strong> @Model.BillDate.ToString("dd MMM yyyy, hh:mm tt")</p>
                            <p class="mb-1">
                                <strong>Payment Method:</strong>
                                @{
                                    string badgeClass = Model.PaymentMethod switch
                                    {
                                        "Cash" => "bg-success-subtle text-success",
                                        "Card" => "bg-info-subtle text-info",
                                        "UPI" => "bg-primary-subtle text-primary",
                                        "Pending" => "bg-warning-subtle text-warning",
                                        _ => "bg-secondary-subtle text-secondary"
                                    };
                                    string icon = Model.PaymentMethod switch
                                    {
                                        "Cash" => "bi-cash",
                                        "Card" => "bi-credit-card",
                                        "UPI" => "bi-phone",
                                        "Pending" => "bi-hourglass-split",
                                        _ => "bi-question-circle"
                                    };
                                }
                                <span class="badge @badgeClass rounded-pill">
                                    <i class="bi @icon me-1"></i> @Model.PaymentMethod
                                </span>
                            </p>
                            <p class="mb-1">
                                <strong>Status:</strong>
                                @{
                                    string statusBadgeClass = Model.PaymentStatus switch
                                    {
                                        "Paid" => "bg-success",
                                        "Pending" => "bg-warning",
                                        "Failed" => "bg-danger",
                                        _ => "bg-secondary"
                                    };
                                    string statusIcon = Model.PaymentStatus switch
                                    {
                                        "Paid" => "bi-check-circle-fill",
                                        "Pending" => "bi-hourglass-split",
                                        "Failed" => "bi-x-circle-fill",
                                        _ => "bi-question-circle-fill"
                                    };
                                }
                                <span class="badge @statusBadgeClass rounded-pill">
                                    <i class="bi @statusIcon me-1"></i> @Model.PaymentStatus
                                </span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bill Items Card -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-cart me-2 text-primary"></i>Bill Items</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th class="text-end">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.BillItems)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="bg-light rounded-circle p-2 me-3">
                                                    <i class="bi bi-box text-primary"></i>
                                                </div>
                                                <div>
                                                    <h6 class="mb-0">@item.Product.Name</h6>
                                                    @if (!string.IsNullOrEmpty(item.Product.Description))
                                                    {
                                                        <small class="text-muted">@(item.Product.Description?.Length > 30 ? item.Product.Description.Substring(0, 30) + "..." : item.Product.Description)</small>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-light text-dark rounded-pill">
                                                @item.Quantity @(item.Quantity == 1 ? "unit" : "units")
                                            </span>
                                        </td>
                                        <td>₹@item.UnitPrice.ToString("N2")</td>
                                        <td class="text-end fw-bold">₹@item.TotalPrice.ToString("N2")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light">
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Total Amount:</strong></td>
                                    <td class="text-end"><span class="fs-5 fw-bold text-primary">₹@Model.TotalAmount.ToString("N2")</span></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Summary Card -->
            <div class="card border-0 shadow-sm mb-4 sticky-top" style="top: 20px;">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-clipboard-check me-2 text-primary"></i>Bill Summary</h5>
                </div>
                <div class="card-body p-4">
                    <div class="summary-item d-flex justify-content-between mb-3">
                        <span class="text-muted">Bill Number:</span>
                        <span class="fw-bold">#@Model.BillNumber</span>
                    </div>
                    <div class="summary-item d-flex justify-content-between mb-3">
                        <span class="text-muted">Date:</span>
                        <span class="fw-bold">@Model.BillDate.ToString("dd MMM yyyy")</span>
                    </div>
                    <div class="summary-item d-flex justify-content-between mb-3">
                        <span class="text-muted">Customer:</span>
                        <span class="fw-bold">@Model.CustomerName</span>
                    </div>
                    <div class="summary-item d-flex justify-content-between mb-3">
                        <span class="text-muted">Total Items:</span>
                        <span class="fw-bold">@Model.BillItems.Count</span>
                    </div>
                    <div class="summary-item d-flex justify-content-between mb-3">
                        <span class="text-muted">Payment Method:</span>
                        <span class="badge @badgeClass rounded-pill">
                            <i class="bi @icon me-1"></i> @Model.PaymentMethod
                        </span>
                    </div>
                    <div class="summary-item d-flex justify-content-between mb-3">
                        <span class="text-muted">Status:</span>
                        <span class="badge @statusBadgeClass rounded-pill">
                            <i class="bi @statusIcon me-1"></i> @Model.PaymentStatus
                        </span>
                    </div>

                    <hr class="my-4">

                    <div class="summary-item d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted fs-5">Total Amount:</span>
                        <span class="fs-4 fw-bold text-primary">₹@Model.TotalAmount.ToString("N2")</span>
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        @if (Model.PaymentStatus == "Pending")
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                                <i class="bi bi-pencil me-1"></i>Edit Bill
                            </a>
                        }
                        <button onclick="window.print()" class="btn btn-outline-primary">
                            <i class="bi bi-printer me-1"></i>Print Bill
                        </button>
                        <button id="shareWhatsAppSummary" class="btn btn-outline-success">
                            <i class="bi bi-whatsapp me-1"></i>Share via WhatsApp
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left me-1"></i>Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Add Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

    <script>
        document.getElementById('shareWhatsApp').addEventListener('click', function () {
            // Create bill summary text
            const billNumber = '@Model.BillNumber';
            const customerName = '@Model.CustomerName';
            const billDate = '@Model.BillDate.ToString("dd MMM yyyy")';
            const totalAmount = '₹@Model.TotalAmount.ToString("N2")';
            const paymentStatus = '@Model.PaymentStatus';

            // Create items list
            let itemsList = '';
        @foreach (var item in Model.BillItems)
        {
            @:itemsList += '• @item.Product.Name (@item.Quantity x ₹@item.UnitPrice.ToString("N2")) = ₹@item.TotalPrice.ToString("N2")\n';
        }

                    // Format the message
                    const message =
                `*Bill Details*\n\n` +
                `Bill Number: #${billNumber}\n` +
                `Customer: ${customerName}\n` +
                `Date: ${billDate}\n` +
                `Status: ${paymentStatus}\n\n` +
                `*Items:*\n${itemsList}\n` +
                `*Total Amount: ${totalAmount}*\n\n` +
                `Thank you for your business!`;

            // Encode the message for URL
            const encodedMessage = encodeURIComponent(message);

            // Create WhatsApp URL
            const whatsappUrl = `https://wa.me/?text=${encodedMessage}`;

            // Open WhatsApp in a new window
            window.open(whatsappUrl, '_blank');
        });
        // Make the summary button use the same function
        document.getElementById('shareWhatsAppSummary').addEventListener('click', function () {
            document.getElementById('shareWhatsApp').click();
        });
    </script>

    <style>
        /* Print styles */
        @@media print {
            .btn, .sticky-top {
                display: none !important;
            }

            .card {
                border: 1px solid #dee2e6 !important;
                box-shadow: none !important;
            }

            .container {
                width: 100% !important;
                max-width: 100% !important;
            }

            body {
                font-size: 12pt;
            }

            .table {
                width: 100% !important;
            }

            .col-lg-8 {
                width: 100% !important;
                flex: 0 0 100% !important;
                max-width: 100% !important;
            }

            .col-lg-4 {
                width: 100% !important;
                flex: 0 0 100% !important;
                max-width: 100% !important;
            }
        }

        /* Card hover effect */
        .card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
            }

        /* Table row hover effect */
        .table-hover tbody tr:hover {
            background-color: rgba(13, 110, 253, 0.05);
        }
    </style>
}